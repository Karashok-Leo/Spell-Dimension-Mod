plugins {
    id 'fabric-loom' version '1.7-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    mavenLocal()
    maven { url "https://jitpack.io" }
    maven { url "https://maven.kosmx.dev/" }
    maven { url "https://www.cursemaven.com" }
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.wispforest.io" }
    maven { url "https://maven.blamejared.com/" }
    maven { url "https://api.modrinth.com/maven" }
    maven { url "https://mvn.devos.one/releases/" }
    maven { url 'https://maven.azuredoom.com/mods' }
    maven { url "https://maven.willbl.dev/releases" }
    maven { url "https://maven.terraformersmc.com/" }
    maven { url "https://maven.florens.be/releases" }
    maven { url "https://maven.isxander.dev/releases" }
    maven { url "https://maven.bawnorton.com/releases" }
    maven { url "https://maven.ladysnake.org/releases" }
    maven { url "https://maven.jamieswhiteshirt.com/libs-release" }
    maven { url "https://dl.cloudsmith.io/public/klikli-dev/mods/maven/" }
    maven { url "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/" }
}

loom {
}

sourceSets {
    main {
        resources {
            srcDirs += [
                    'src/main/generated'
            ]
        }
    }
}

fabricApi {
    configureDataGeneration()
}
// Specify the modid to avoid generating dependencies' data
runDatagen.jvmArgs("-Dfabric-api.datagen.modid=spell-dimension")

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    include(implementation(annotationProcessor("com.github.bawnorton.mixinsquared:mixinsquared-fabric:0.2.0")))
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
    modImplementation "io.github.ladysnake:PlayerAbilityLib:${project.pal_version}"
    modImplementation "dev.emi:trinkets:${project.trinkets_version}"
    include modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}")
    include modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca_version}")
    include modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-world:${project.cca_version}")

    modImplementation "maven.modrinth:spell-engine:${project.spell_engine_version}"
    modImplementation "maven.modrinth:spell-power:${project.spell_power_version}-fabric"
    modImplementation "maven.modrinth:ranged-weapon-api:${project.ranged_weapon_api_version}"
    modImplementation "maven.modrinth:runes:${project.runes_version}-fabric"

    modImplementation "maven.modrinth:wizards:${project.wizards_version}"
    modImplementation "maven.modrinth:paladins-and-priests:${project.paladins_version}-fabric"
    modImplementation "maven.modrinth:jewelry:${project.jewelry_version}"

//    modImplementation "maven.modrinth:spellblades-and-such:${project.spellbladenext_version}"
//    modImplementation "maven.modrinth:extra-rpg-attributes:${project.extra_rpg_attributes_version}"
    modImplementation "curse.maven:spellblade-next-811662:6038237"
    modImplementation "curse.maven:extra-spell-attributes-941480:6131604"

    modImplementation "maven.modrinth:combat-roll:${project.combat_roll_version}-fabric"
    modImplementation "maven.modrinth:shield-api:${project.shield_api_version}"
    modImplementation "maven.modrinth:structure-pool-api:${project.structure_pool_api_version}"
    modImplementation "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}"
    modImplementation "mod.azure.azurelib:azurelib-fabric-1.20.1:${project.azurelib_version}"
    modImplementation "mod.azure.azurelibarmor:azurelibarmor-fabric-1.20.1:${project.azurelib_armor_version}"
    modImplementation "dev.kosmx.player-anim:player-animation-lib-fabric:${project.player_animator_version}"

    modImplementation "dev.xkmc.l2serial:L2Serial:${project.l2serial_version}"
    modImplementation "dev.xkmc.l2tabs:L2Tabs:${project.l2tabs_version}"
    modImplementation "karashokleo.leobrary:data:${project.leobrary_version}"
    modImplementation "karashokleo.leobrary:datagen:${project.leobrary_version}"
    modImplementation "karashokleo.leobrary:damage:${project.leobrary_version}"
    modImplementation "karashokleo.leobrary:effect:${project.leobrary_version}"
    modImplementation "karashokleo.leobrary:gui:${project.leobrary_version}"
    modImplementation "karashokleo.effect_overlay:effect-overlay:${project.effect_overlay_version}"
    modImplementation "karashokleo.loot_bag:loot-bag:${project.loot_bag_version}"
    modImplementation "karashokleo.l2hostility:L2Hostility:${project.l2hostility_version}"
    modImplementation "karashokleo.enchantment_infusion:enchantment_infusion:${project.enchantment_infusion_version}"
    modImplementation "karashokleo.fusion_smithing:Fusion-Smithing:${project.fusion_smithing_version}"
    modImplementation "io.github.fabricators_of_create.Porting-Lib:entity:${project.port_lib_version}"
    modImplementation "io.github.fabricators_of_create.Porting-Lib:loot:${project.port_lib_version}"

    modImplementation "maven.modrinth:open-parties-and-claims:${project.opac_version}"

//	modImplementation "curse.maven:puffish-skills-835091:${project.puffer_fish_skills_version}"
//	modImplementation "curse.maven:lootr-fabric-615106:${project.lootr_version}"
//    modImplementation "curse.maven:dusk-468908:${project.dusk_version}"


    // Book Datagen
    modImplementation "com.klikli_dev:modonomicon-${project.minecraft_version}-fabric:${project.modonomicon_version}"

    // Book Information
    modImplementation "maven.modrinth:armor-set-bonuses:${project.asb_version}"
    modImplementation "maven.modrinth:aquamirae:${project.aquamirae_version}"
    modImplementation "maven.modrinth:obscure-api:${project.obscure_api_version}"
    modImplementation "maven.modrinth:mmmmmmmmmmmm:${project.mmmmmmmmmmmm_version}"
    modRuntimeOnly "maven.modrinth:moonlight:${project.moonlight_version}"
    modRuntimeOnly "io.wispforest:lavender:${project.lavender_version}"
    modImplementation "maven.modrinth:alloy-forgery:${project.alloy_forgery_version}"
    modImplementation "maven.modrinth:architectury-api:${project.architectury_api_version}"
    modImplementation "maven.modrinth:toms-storage:${project.toms_storage_version}"

    modImplementation "io.wispforest:owo-lib:${project.owo_version}"
    modImplementation "maven.modrinth:mythicmetals:${project.mythic_metals_version}"
    modImplementation "maven.modrinth:mythic-upgrades:${project.mythic_upgrades_version}"
    modImplementation "net.kyrptonaught:customportalapi:${project.customportalapi_version}"
    modImplementation "maven.modrinth:deeperdarker:${project.deeperdarker_version}"
    modImplementation "maven.modrinth:AdditionalEntityAttributes:${project.aea_version}"
    modImplementation "maven.modrinth:when-dungeons-arise:${project.wda_version}-fabric"
    modImplementation "maven.modrinth:plenty-of-armors:${project.plenty_of_armors_version}"

    modImplementation "maven.modrinth:puzzles-lib:${project.puzzles_lib_version}"
    modImplementation "maven.modrinth:forge-config-api-port:${project.forge_config_api_port}"
    modImplementation "maven.modrinth:mutant-monsters:${project.mutant_monster_version}"
    modImplementation "maven.modrinth:illager-invasion:${project.illager_invasion_version}"
    modImplementation "fuzs.extensibleenums:extensibleenums-fabric:${project.extensible_enums_version}"

    modImplementation "maven.modrinth:adventurez:${project.adventurez_version}"
    modImplementation "maven.modrinth:voidz:${project.voidz_version}"
    modImplementation "maven.modrinth:artifacts:${project.artifacts_version}-fabric"
    modImplementation "be.florens:expandability-fabric:${project.expandability_version}"
//    modImplementation "maven.modrinth:the-graveyard-fabric:${project.graveyard_version}"

    // Compat
    modCompileOnly "dev.emi:emi-fabric:${project.emi_version}:api"
//    modLocalRuntime "dev.emi:emi-fabric:${project.emi_version}"
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}"
    modLocalRuntime "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
    }
}