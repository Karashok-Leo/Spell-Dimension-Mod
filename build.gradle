plugins {
	id 'fabric-loom' version '1.6-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url 'https://jitpack.io' }
	maven { url 'https://maven.kosmx.dev/' }
	maven { url "https://www.cursemaven.com" }
	maven { url 'https://maven.shedaniel.me/' }
	maven { url 'https://api.modrinth.com/maven' }
	maven { url "https://maven.terraformersmc.com/" }
	maven { url 'https://maven.ladysnake.org/releases' }
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"spell-dimension" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}
	runs {
		datagen {
			inherit server
			name "Data Generation"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
			vmArg "-Dfabric-api.datagen.modid=spell-dimension"

			runDir "build/datagen"
		}
	}
}

sourceSets {
	main {
		resources {
			srcDirs += [
					'src/main/generated'
			]
		}
	}
}
dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation("maven.modrinth:spell-engine:${project.spell_engine_version}")
	modImplementation("maven.modrinth:spell-power:${project.spell_power_version}-fabric")
	modImplementation("maven.modrinth:runes:${project.runes_version}-fabric")

	modImplementation("dev.emi:trinkets:${project.trinkets_version}")

	implementation("com.github.ZsoltMolnarrr:TinyConfig:${project.tiny_config_version}")

	implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:0.2.1"))

	modImplementation "curse.maven:puffish-skills-835091:${project.puffer_fish_skills_version}"

	include modImplementation ("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}")
	include modImplementation ("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca_version}")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
	}
}